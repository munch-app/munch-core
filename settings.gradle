rootProject.name = 'munch-core'

/**
 * Munch App Post-Ignatius Utility
 * All utility classes are combined into one module.
 * In the future, it can be separated out and maintained as its own project.
 */
include 'utils'

/**
 * Munch App Post-Ignatius Database Engine
 * All post-ignatius era models must be contained inside this module.
 * When certain part of the project grows out of scale in the future, it should then be migrated out.
 */
include 'database'

/**
 * Munch App Post-Ignatius Elastic Engine
 * Elastic service is separated out from the database engine to reduce
 * coupling of internal services.
 *
 * To prevent database & elastic from data corruption. (Disparity)
 * - Database will always hold the true copy
 * - Elastic will always just be mirroring data over.
 * - A healing worker should also be implemented to fix data corruption.
 */
include 'elastic'

/**
 * Munch App Post-Ignatius Controller
 * Controller is business logic that is separated out into its own module for brevity sake.
 */
include 'controller'

/**
 * Munch App Post-Ignatius Worker Engine
 */
include 'worker'
include 'worker:worker-affiliate-chope'
include 'worker:worker-instagram'
include 'worker:worker-place'

/**
 * Munch Public API
 * Split into their various top level modules
 */
include 'api'
include 'api:api-core'
include 'api:api-data'
include 'api:api-admin'

/**
 * Feature specific API.
 */
include 'api:api-account'
include 'api:api-page'
include 'api:api-place'
// search, filter, trending, between, business

// Deprecating
include 'api:api-locations'
include 'api:api-feed'
include 'api:api-search'
include 'api:api-places'

/**
 * Munch App Website
 */
include 'website'

/**
 * Munch App Website Sitemap
 * build for SEO for dynamic data
 * Sitemap created is put into AWS s3 www.munch.app-sitemap bucket
 */
include 'sitemap'


/**
 * Temporary module for v22 to Post-Ignatius migration service.
 */
include 'migration'
