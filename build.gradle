allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'maven-publish'

    group 'munch.core'
    version '1.0.0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven {
            url 'http://artifactory.fxloh.com/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        mavenCentral()
        maven {
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            url "http://artifactory.fxloh.com/artifactory/munch"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact(sourcesJar) {
                    classifier = 'sources'
                }
            }
        }
    }

    configurations.all { resolutionStrategy.cacheChangingModulesFor 0, 'seconds' }

    dependencies {
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-M3'
        testCompile group: 'org.easytesting', name: 'fest-assert', version: '1.4'

        compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1u2'
    }
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
    compile group: 'org.wololo', name: 'jts2geojson', version: '0.10.0'
}

configure(subprojects.findAll { it.name.matches("munch-(.+)") }) {
    apply plugin: 'application'
    apply plugin: 'com.bmuschko.docker-java-application'

    ext.dockerTag = 'munch-core/' + project.name + ':latest'
    ext.dockerHost = '197547471367.dkr.ecr.ap-southeast-1.amazonaws.com/' + dockerTag

    dockerDistTar {
        runCommand('apk add --update bash && rm -rf /var/cache/apk/*')
    }

    docker {
        javaApplication {
            baseImage = 'openjdk:8-jdk-alpine'
            maintainer = 'Fuxing'
            ports = [8000]
            tag = dockerTag
        }
    }

    task publishDocker {
        dependsOn 'clean'
        dependsOn 'dockerBuildImage'
        tasks.findByName('dockerBuildImage').mustRunAfter 'clean'

        doLast {
            exec { commandLine "docker", "tag", dockerTag, dockerHost }
            exec { commandLine "docker", "push", dockerHost}
        }
    }
}

configure(subprojects.findAll { it.name.matches("restful-(.+)") }) {
    group 'munch'
    version '0.7.0-SNAPSHOT'

    task publishLib {
        dependsOn 'build'
        dependsOn 'artifactoryPublish'
        tasks.findByName('artifactoryPublish').mustRunAfter 'build'
    }
}

buildscript {
    repositories {
        maven {
            url 'http://artifactory.fxloh.com/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.5'
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'munch'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
        defaults {
            publications('mavenJava')
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }
}